#header-container{
  height: 70px;
  /* width: 100%; */
  /* border: 2px black solid; */
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* #header-logo{
  background-image: url("../images/Logo.png");
  height: 100px;
  width: auto;
} */

.header-buttons{
  margin-left: 50px;
  text-decoration: none;
  color: black;
}

.header-schedule-tour{
  margin-left: 50px;
  background-color: #20b197;
  color: #e2f5f2;
  border: none;
  padding: 8px 13px;
  border-radius: 5px;
  margin-right: 50px;
}

#website-body-center-container{
  display: flex;
  justify-content: center;
}


#website-body-content-container{
  max-width: 1000px;
}

.hero-image-container{
  width: 100%;
  height: 330px;
  /* background-color: lightcyan; */
  display: flex;
  justify-content: center;
  align-items: center;

  background-image: url("../images/hero_image.png");
  background-position: center;
  background-size: cover;
}

#about-section-container{
  padding: 70px;
  /* background-color: lightcoral; */
}

#about-title-text{
  text-align: center;
  font-size: 20px;
  margin-bottom: 20px;
  color:#0c6ddf;
}

#about-grid-container{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}

.about-image-img{
  /* height: 200px; */
  width: 90%;
  height: auto;
  border-radius: 10px;
}

.about-image-container{
  height: 200px;
  width: 90%;
  background-color: lightgreen;
}


#two-locations-container{
  /* background-color: lightgreen; */
  width: 100%;
  height: 300px;

}


#two-locations-title-text{
  text-align: center;
  font-size: 20px;
  margin-bottom: 20px;
  color:#0c6ddf;
}
#two-locations-grid-center-container{
  display: flex;
  justify-content: center;
}

#two-locations-grid-container{
  width: 90%;
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.two-locations-div{
  height: 200px;
  width: 90%;
}

.two-locations-img{
  background-color: lightgrey;
  height: 200px;
  border-radius: 10px;
}








#schedule-form-container{
  height: 500px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  background-color: lightcyan;
}

#schedule-tour-title{
  font-size: 30px;  
}

#schedule-tour-description{
  font-size: 14px;
  line-height: 16px;
  margin-top: 30px;
  margin-bottom: 30px;
}

#schedule-tour-FAQ{
  font-size: 14px;
  line-height: 16px;
  margin-top: 30px;
  margin-bottom: 30px;
}

#schedule-form-name-grid{
  display: grid;
  grid-template-columns: 1fr 1fr;
}



/* input[type="radio"] {
  display: none;
} */


/*
 * Then, style the label so it looks like however you want.
 * Here's a quick rundown of how I did it here:
 */


/*
 * Some basic positioning styles, and we give it the pointer cursor to show 
 * that it's clickable
 */

/* label {
  display: inline-block;
  padding: 5px 10px;
  cursor: pointer;
} */


/*
 * With how I decided to build this, the position: relative is super important.
 * We're going to position a pseudo element within this element(As it is the containing box)
 */

/* label span {
  position: relative;
  line-height: 22px;
}  */


/* 
 * Because we're using pseudo elements, a content property is required to make them appear.
 */

/* label span:before,
label span:after {
  content: '';
} */


/*
 * We are using the :before peudo elemnt as the actual button,
 * then we'll position the :after over it. You could also use a background-image,
 * font-icon, or really anything if you want different styles.
 * For the specific style we're going for, this approach is simply the easiest, but
 * once you understand the concept you can really do it however you like.
 */

/* label span:before {
  border: 1px solid #222021;
  width: 20px;
  height: 20px;
  margin-right: 10px;
  display: inline-block;
  vertical-align: top;
}

label span:after {
  background: #222021;
  width: 14px;
  height: 14px;
  position: absolute;
  top: 2px;
  left: 4px;
  transition: 300ms;
  opacity: 0;
} */

/*
 * This is the most important part of this whole file, if you understand what's happening here
 * you can really make this in so many different ways.
 * 
 * We start by selecting the input inside of the label, with "label input". From there we use the 
 * ":checked" selector to *only* select the input when it is checked. We then use the immediate sibling 
 * selector(+) to select the span, and then it's pseudo element :after(What we are using to mark the button)
 * Because we already styled the :after, all we have to do is set the opacity to 1, making it fade in.
 */

/* label input[type="radio"]:checked+span:after {
  opacity: 1;
} */













#website-footer{
  height: 100px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

#footer-text{
  font-size: 24px;
  display: block;
}
#footer-contact-us-button{
  background-color: #20b197;
  color: #e2f5f2;
  border: none;
  padding: 8px 13px;
  border-radius: 5px;
  margin-right: 50px;
  font-size: 20px;
}